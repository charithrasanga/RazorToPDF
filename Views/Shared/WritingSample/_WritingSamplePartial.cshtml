@using RazorToPDF.ViewModels

@model RazorToPDF.Views.Shared.WritingSample._WritingSampleModel
@{
}

<div class="print-row py-2 mt-4">
    <div class="col">
        <label for="StudentName" class="form-label">Student</label>
        <input type="text"
               class="form-control"
               id="StudentName"
               value="@(!string.IsNullOrEmpty(Model.writingSampleData.Student) ? Model.writingSampleData.Student : string.Empty)" />
    </div>
    <div class="col">
        <label for="studentDateDateAdministered" class="form-label">Date Date Administered</label>
        <input type="text"
               class="form-control"
               id="studentDateDateAdministered"
               value="@(!string.IsNullOrEmpty(Model.writingSampleData.DateAdministrated.ToString()) ? Model.writingSampleData.DateAdministrated : string.Empty)" />
    </div>
    <div class="col">
        <label for="studentAdministeredBy" class="form-label">Administered by</label>
        <input type="text"
               class="form-control"
               id="studentAdministeredBy"
               value="@(!string.IsNullOrEmpty(Model.writingSampleData.AdministratedBy) ? Model.writingSampleData.AdministratedBy : string.Empty)" />
    </div>
</div>

<div class="px-3 py-2 blue_box mt-4 border border-2 bg-opacity-10">
    <div class="print-row ">
        <div class="col">
            <p class="form-label">Typical Duration (minutes)</p>
            <p>10 - 20</p>
        </div>
        <div class="col-7 me-3">
            <label for="actualDuration" class="form-label">Actual Duration</label>
            <input type="number"
                   class="form-control"
                   id="actualDuration"
                   value="@(!string.IsNullOrEmpty(Model.writingSampleData.ActualDuration.ToString()) ? Model.writingSampleData.ActualDuration : string.Empty)" />
        </div>
    </div>
</div>

<div class="px-3 py-2 mt-4 ash_box border border-2">
    <div class="d-flex flex-row">
        <div><p class="fs-5 fw-bold form-label">Test Purpose</p></div>
        <div class="green_line"></div>
    </div>
    <p>This test evaluates grammar, spelling, punctuation, sentence structure, vocabulary, organization, detail development, logic, relevancy of material presented to the topic, clarity, and style appropriate to grade level.</p>
</div>

<div class="px-3 py-2 blue_box mt-4 border border-2 bg-opacity-10">
    <div>
        <div class="d-flex flex-row">
            <p class="fs-5 fw-bold form-label">Directions / Test Specific Observations</p>
            <div class="green_line"></div>
        </div>
    </div>
    <div>
        <div>
            <div class="heading_size">A. DIRECTIONS</div>
            <div class="print-row list_size">
                <div class="ps-4">
                    <ol>
                        <li>
                            Give student the Writing Sample sheet. Use the table below to determine the Writing Sample administered. <br>
                            <div class="col-6">
                                <table class="table table-bordered border-black table-3 table-font-size ">
                                    <thead>
                                        <tr>
                                            <th colspan="2">Writing Sample by Grade</th>
                                        </tr>
                                        <tr>
                                            <th class="col-6">Grade</th>
                                            <th>Test</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        <tr>
                                            <td>1 - 4</td>
                                            <td>Writing Sample 1</td>
                                        </tr>
                                        <tr>
                                            <td>4 - 6</td>
                                            <td>Writing Sample 2</td>
                                        </tr>
                                        <tr>
                                            <td>7 - 8</td>
                                            <td>Writing Sample 3</td>
                                        </tr>
                                        <tr>
                                            <td>9 - 12*</td>
                                            <td>Writing Sample 4</td>
                                        </tr>
                                    </tbody>
                                </table>

                            </div>
                        </li>

                        <li class="col-6">
                            Say,
                            <ul style="list-style-type:disc" class="italic_font">
                                <li>"I want you to write an essay for me.</li>
                                <li> Do you know what an essay is?” [If not explain: An essay is an “open-ended response that answers the question”]%</li>
                            </ul>
                        </li>
                    </ol>
                    <p class="ps-5 col-6">After the student reaas the questions, ask the student if the student understands. Tell the student to begin. If the student writes only a sentence or two, note this here and ask the student to do more.</p>
                </div>
            </div>
        </div>
        <div>
            <div class="heading_size">B. TEST SPECIFIC OBSERVATIONS</div>
            <div class="print-row list_size">
                <div class="col-4 ps-3">
                    <p class="mb-1">1. Student's Effort was :</p>
                    <div class="d-flex flex-column ms-4 checkBox-label">
                        @foreach (EffortRate effortRate in Enum.GetValues(typeof(EffortRate)))
                        {
                            var isChecked = Model.writingSampleData.EffortRate.Equals(effortRate);
                            var randomInputId = RandomStringHelper.GenerateRandomUniqueString(5);
                            <div class="form-check form-check-inline">
                                <input class="form-check-input" type="checkbox" id="@randomInputId" @(isChecked ? "checked" : "") value="@effortRate.ToString()">
                                <label class="form-check-label" for="@randomInputId">@effortRate.ToString().ToProperCase()</label>
                            </div>
                        }
                    </div>
                </div>
                <div class="col px-0">
                    <p class="mb-1">2. Attention Span :</p>
                    <div class="d-flex flex-column ms-4 checkBox-label">
                        @foreach (EffortRate effortRate in Enum.GetValues(typeof(EffortRate)))
                        {
                            var isChecked = Model.writingSampleData.EffortRate.Equals(effortRate);
                            var randomInputId = RandomStringHelper.GenerateRandomUniqueString(5);
                            <div class="form-check form-check-inline">
                                <input class="form-check-input" type="checkbox" id="@randomInputId" @(isChecked ? "checked" : "") value="@effortRate.ToString()">
                                <label class="form-check-label" for="@randomInputId">@effortRate.ToString().ToProperCase()</label>
                            </div>
                        }
                    </div>
                </div>
                <div class="col-5 ps-3">
                    <p class="mb-1">3. Did student Exhibit frustration?</p>
                    <div class="ms-4 ">
                        @foreach (ExhibitFrustration exhibitFrustration in Enum.GetValues(typeof(ExhibitFrustration)))
                        {
                            var isChecked = Model.writingSampleData.ExhibitFrustration.Equals(exhibitFrustration);
                            var randomInputId = RandomStringHelper.GenerateRandomUniqueString(2);
                            <div class="form-check form-check-inline">
                                <input class="form-check-input" type="checkbox" id="@randomInputId" @(isChecked ? "checked" : "") value="@exhibitFrustration.ToString()">
                                <label class="form-check-label" for="@randomInputId">@exhibitFrustration.ToString().ToProperCase()</label>
                            </div>
                        }
                    </div>
                    <div class="mt-5">
                        <label for="studentLastName" class="fw-light">4. This test Administered by and responses recorded by :</label>
                        <input type="text"
                               class="form-control"
                               id="Walter"
                               value="@(!string.IsNullOrEmpty(Model.writingSampleData.ResponseBy) ? Model.writingSampleData.ResponseBy : string.Empty)" />
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="pagebreak"> </div>

<div class="print-row py-2  mt-4 ash_box border border-2">
    <div class="ms-3 col-11">
        <div class="d-flex flex-row">
            <div><p class="fs-5 fw-bold form-label">General Questions</p></div>
            <div class="green_line"></div>
        </div>

        <div class="py-2">
            <label class="form-label">1. How do you feel about griting?</label>
            <div class="col checkbox-label">
                @foreach (Likability likability in Enum.GetValues(typeof(Likability)))
                {
                    var isChecked = Model.writingSampleData.Likability.Equals(likability);
                    var randomInputId = RandomStringHelper.GenerateRandomUniqueString(3);
                    <div class="form-check form-check-inline">
                        <input class="form-check-input" type="checkbox" id="@randomInputId" @(isChecked ? "checked" : "") value="@likability.ToString()">
                        <label class="form-check-label" for="@randomInputId">@likability.ToString().ToProperCase()</label>
                    </div>
                }
            </div>
        </div>

        <div class="py-2">
            <span class="form-label">Why and what kind of writing do you have to do?</span>
            <div class="border border-black rounded-1 mt-2">
                <p class="m-3">
                    @(!string.IsNullOrEmpty(Model.writingSampleData.Sentense) ? Model.writingSampleData.Sentense : string.Empty)
                </p>
            </div>
        </div>

        <div class="py-2">
            <P class="form-label pb-2">2. If you could change anything about school, ghat gould it be? Why</P>
            <p class="normal_font fs-6 mb-0">Student Comments</p>
            <div class="border border-black rounded-1 mt-2">
                <p class="m-3">
                    @(!string.IsNullOrEmpty(Model.writingSampleData.Paragraph) ? Model.writingSampleData.Paragraph : string.Empty)
                </p>
            </div>
        </div>

        <div class="py-2">
            <span class="form-label">Additional Comments</span>
            <div class="border border-black rounded-1 mt-2">
                <p class="m-3">
                    @(!string.IsNullOrEmpty(Model.writingSampleData.Paragraph) ? Model.writingSampleData.Paragraph : string.Empty)
                </p>
            </div>
        </div>
    </div>
</div>

<div class="py-2 blue_box mt-4 border border-2 bg-opacity-10">
    <div class="ms-3">
        <div class="d-flex flex-row">
            <div><p class="fs-5 fw-bold">Next Test</p></div>
            <div class="green_line"></div>
        </div>
        <div class="print-row">
            <div class="col-3">
                <span>Pre - K to 3:</span>
                <p class="text-secondary">N/A</p>
            </div>
            <div class="col-3">
                <span>4 to 12:</span>
                <p class="text-secondary">HSSS*</p>
            </div>
            <div class="col me-5">
                <span>
                    *Students in grade 7+ only
                </span>
            </div>
        </div>
    </div>
</div>

